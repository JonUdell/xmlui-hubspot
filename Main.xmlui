<App
  layout="vertical"
  theme='xmlui-orange'
  var.selection=""
  var.filename=""
  var.baseUrl="http://hn.jonudell.info/xmlui-hubspot/proxy/api.hubapi.com/crm/v3/objects/contacts"
  var.urlProps="?properties=firstname,lastname,email,company,custom_notes"
  var.headers='{{"Authorization":"Bearer pat-na1-0ceabe07-2a65-4bb5-a1eb-78e8362fca83", "content-type":"application/json" }}'
  var.newContacts=""
  var.contactToSend=""
>

  <H1>Trade-show scans to HubSpot </H1>

  <Text>Start by choosing the CSV file you got from the scan service.</Text>

  <Stack width="30%">

    <FileInput id="fileInput" acceptsFileType="{['.csv']}"
      onDidChange="{ (val) => filename = val[0]?.name; contactsFromCsv.clearSelection() }" />

    <Text value="file: {filename}" />
    <Text preserveLinebreaks="true">New contacts: { JSON.stringify(newContacts, null, 2) } </Text>

  </Stack>

  <Fragment when="{filename}">

    <DataSource
      id="csv"
      dataType="csv"
      url="{filename}"
      transformResult="{(data) => data.map((row, index) => ({...row, id: `${index}`}))}"
    />
    <!-- ^ awkward way to ensure selectability -->

    <Form
      id="newContactsForm"
      data="{ [] }"
      onSubmit="sendToHubspot()"
      onCancel="{ filename = ''; newContacts = '' }"
    >

    <!--
    <property name="buttonRowTemplate">
      <HStack>
        <Button label="Reset" />
        <Button label="Send to Hubspot"/>
      </HStack>
    </property>
    -->

      <Table
        id="contactsFromCsv"
        title="HubSpot contacts"
        data="{ csv  }"
        rowsSelectable="true"
        onSelectionDidChange="(selection) => {
          newContacts = selection;
        }"
      >
        <Column bindTo="firstname" />
        <Column bindTo="lastname" />
        <Column bindTo="company" />
        <Column bindTo="email" />
        <Column header="custom_notes">
          <TextBox
            id="note"
            value="{$item.custom_notes}"
            onDidChange="(value) => {
              const updatedContacts = [...newContacts];
              const index = updatedContacts.findIndex(c => c.id === $item.id);
              if (index >= 0) {
                updatedContacts[index] = {...updatedContacts[index], custom_notes: value};
                newContacts = updatedContacts;
              }
            }"
        />
        </Column>
      </Table>

    </Form>

  </Fragment>

  <APICall
    id="sendContact"
    headers="{headers}"
    url="{baseUrl}"
    method="POST"
    onSuccess="processNextContact()"
    onError="(error) => console.error('API Error:', error)"
    rawBody="{contactToSend}"
  />

  <ChangeListener
    listenTo="{contactToSend}"
    onDidChange="{() => {
      console.log('Request payload:', contactToSend);
      sendContact.execute();
    }}"
  />

  <ContentSeparator size="8px" />

  <H2>Contacts in Hubspot</H2>

  <DataSource
    id="contactsFromHubspot"
    resultSelector="results.map(item => item.properties )"
    url="{baseUrl + urlProps}"
    headers="{headers}"
  />

  <Table title="HubSpot contacts" data="{ contactsFromHubspot }">
    <Column bindTo="firstname" />
    <Column bindTo="lastname" />
    <Column bindTo="company" />
    <Column bindTo="email" />
    <Column bindTo="custom_notes" />
  </Table>

</App>
